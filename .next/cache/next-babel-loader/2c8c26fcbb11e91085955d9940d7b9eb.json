{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Rivas\\\\Desktop\\\\react_Study\\\\fiton\\\\components\\\\context\\\\StateProider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport StateContext from './StateContext';\n\nconst StateProvider = ({\n  children\n}) => {\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState(0);\n  const {\n    0: toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: navScroll,\n    1: setNavScroll\n  } = useState(false);\n  const {\n    0: navheight,\n    1: setNavHeight\n  } = useState(null);\n  const navRef = useRef();\n\n  const setCarosuel = (tablet = 3, laptop = 4, laptopLg = 5) => {\n    if (windowSize < 768) {\n      return 1;\n    } else if (windowSize <= 768 || windowSize < 1280) {\n      return tablet;\n    } else if (windowSize <= 1280 || windowSize < 2000) {\n      return laptop;\n    } else if (windowSize >= 2000) {\n      return laptopLg;\n    }\n  };\n\n  useEffect(() => {\n    setWindowSize(window.innerWidth);\n  }, []);\n  useEffect(() => {\n    if (!navheight) return;\n    setNavHeight(navRef.current.scrollHeight); // window.addEventListener('scroll', () => {\n    //   if (window.scrollY > navheight) {\n    //     setNavScroll(true);\n    //   } else {\n    //     setNavScroll(false);\n    //   }\n    // });\n  }, []);\n  console.log(navRef, 'state');\n  console.log(navheight, 'state');\n  return __jsx(StateContext.Provider, {\n    value: {\n      windowSize,\n      setCarosuel,\n      toggle,\n      setToggle,\n      navScroll,\n      navRef\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children);\n};\n\nexport default StateProvider;","map":{"version":3,"sources":["C:/Users/Eduardo Rivas/Desktop/react_Study/fiton/components/context/StateProider.js"],"names":["useState","useEffect","useRef","StateContext","StateProvider","children","windowSize","setWindowSize","toggle","setToggle","navScroll","setNavScroll","navheight","setNavHeight","navRef","setCarosuel","tablet","laptop","laptopLg","window","innerWidth","current","scrollHeight","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,MAAM,GAAGZ,MAAM,EAArB;;AAEA,QAAMa,WAAW,GAAG,CAACC,MAAM,GAAG,CAAV,EAAaC,MAAM,GAAG,CAAtB,EAAyBC,QAAQ,GAAG,CAApC,KAA0C;AAC5D,QAAIZ,UAAU,GAAG,GAAjB,EAAsB;AACpB,aAAO,CAAP;AACD,KAFD,MAEO,IAAIA,UAAU,IAAI,GAAd,IAAqBA,UAAU,GAAG,IAAtC,EAA4C;AACjD,aAAOU,MAAP;AACD,KAFM,MAEA,IAAIV,UAAU,IAAI,IAAd,IAAsBA,UAAU,GAAG,IAAvC,EAA6C;AAClD,aAAOW,MAAP;AACD,KAFM,MAEA,IAAIX,UAAU,IAAI,IAAlB,EAAwB;AAC7B,aAAOY,QAAP;AACD;AACF,GAVD;;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACY,MAAM,CAACC,UAAR,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,SAAL,EAAgB;AAChBC,IAAAA,YAAY,CAACC,MAAM,CAACO,OAAP,CAAeC,YAAhB,CAAZ,CAFc,CAGd;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVQ,EAUN,EAVM,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAoB,OAApB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EAAuB,OAAvB;AAEA,SACE,MAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,UADK;AAELS,MAAAA,WAFK;AAGLP,MAAAA,MAHK;AAILC,MAAAA,SAJK;AAKLC,MAAAA,SALK;AAMLI,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGT,QAVH,CADF;AAcD,CApDD;;AAsDA,eAAeD,aAAf","sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport StateContext from './StateContext';\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [windowSize, setWindowSize] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [navScroll, setNavScroll] = useState(false);\r\n  const [navheight, setNavHeight] = useState(null);\r\n  const navRef = useRef();\r\n\r\n  const setCarosuel = (tablet = 3, laptop = 4, laptopLg = 5) => {\r\n    if (windowSize < 768) {\r\n      return 1;\r\n    } else if (windowSize <= 768 || windowSize < 1280) {\r\n      return tablet;\r\n    } else if (windowSize <= 1280 || windowSize < 2000) {\r\n      return laptop;\r\n    } else if (windowSize >= 2000) {\r\n      return laptopLg;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWindowSize(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!navheight) return;\r\n    setNavHeight(navRef.current.scrollHeight);\r\n    // window.addEventListener('scroll', () => {\r\n    //   if (window.scrollY > navheight) {\r\n    //     setNavScroll(true);\r\n    //   } else {\r\n    //     setNavScroll(false);\r\n    //   }\r\n    // });\r\n  }, []);\r\n\r\n  console.log(navRef, 'state');\r\n  console.log(navheight, 'state');\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        windowSize,\r\n        setCarosuel,\r\n        toggle,\r\n        setToggle,\r\n        navScroll,\r\n        navRef\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StateProvider;\r\n"]},"metadata":{},"sourceType":"module"}