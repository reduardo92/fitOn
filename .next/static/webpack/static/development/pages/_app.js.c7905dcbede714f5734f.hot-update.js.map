{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.c7905dcbede714f5734f.hot-update.js","sources":["webpack:///./components/navbar.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaPhone } from 'react-icons/fa';\r\nimport { MdEmail, MdMap } from 'react-icons/md';\r\nimport Link from '../components/Link';\r\n\r\nconst Styled = styled.header`\r\n  position: ${props => (props.navScroll ? 'fixed' : 'absolute')};\r\n  padding: 0.5em 0;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  background-color: ${props =>\r\n    props.navScroll ? 'var(--second-clr)' : 'none'};\r\n  animation: 1s fadeIn linear;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    display: ${props => (props.toggle ? 'block' : ' none')};\r\n    opacity: ${props => (props.toggle ? 1 : 0)};\r\n    z-index: ${props => (props.toggle ? '' : -3)};\r\n  }\r\n\r\n  /* nav links */\r\n  .nav--link {\r\n    &__item {\r\n      font-weight: var(--fw-bold);\r\n      color: var(--second-clr);\r\n      font-size: 1.1rem;\r\n      transition: var(--ease--in--out--02s);\r\n      cursor: pointer;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--primary-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Change Nav Links Active */\r\n  .selected {\r\n    color: var(--primary-clr) !important;\r\n  }\r\n\r\n  /* Top head */\r\n  .head--top {\r\n    display: ${props => (props.navScroll ? 'none' : 'flex')};\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n\r\n    .info--link {\r\n      color: var(--white-clr);\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: baseline;\r\n      font-size: 0.85rem;\r\n      cursor: pointer;\r\n      transition: var(--ease--in--out--02s);\r\n      margin-bottom: 0.5em;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--primary-clr);\r\n      }\r\n      svg {\r\n        margin-right: 0.5em;\r\n        color: var(--primary-clr);\r\n      }\r\n    }\r\n  }\r\n\r\n  .brand-logo--top {\r\n    display: none;\r\n  }\r\n\r\n  /* NavBar */\r\n  .navbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: ${props => (props.navScroll ? '0' : '1em')};\r\n    padding: ${props => (props.navScroll ? '.5em' : '0')};\r\n  }\r\n\r\n  .brand-logo {\r\n    display: block;\r\n    width: 120px;\r\n  }\r\n\r\n  .nav--toggle {\r\n    transition: var(--tran--opa);\r\n    opacity: ${props => (props.toggle ? '0' : 1)};\r\n    margin-right: 1em;\r\n  }\r\n\r\n  .burger,\r\n  .burger::before,\r\n  .burger::after {\r\n    background-color: ${props =>\r\n      props.toggle ? 'var(--second-clr)' : 'var(--white-clr)'};\r\n    width: 1.5em;\r\n    height: 3px;\r\n    transition: var(--tran--opa);\r\n  }\r\n\r\n  .burger {\r\n    display: block;\r\n    position: relative;\r\n    transform: ${props => (props.toggle ? 'rotate(45deg)' : '')};\r\n\r\n    &:hover,\r\n    &:focus,\r\n    &:hover::before,\r\n    &:focus::before,\r\n    &:hover::after,\r\n    &:focus::after {\r\n      background-color: var(--second-clr);\r\n    }\r\n\r\n    &::after,\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n    }\r\n\r\n    &::before {\r\n      bottom: 6px;\r\n      opacity: ${props => (props.toggle ? '0' : '1')};\r\n    }\r\n    &::after {\r\n      top: 6px;\r\n      transform: ${props =>\r\n        props.toggle ? 'rotate(90deg) translate(-6px)' : ''};\r\n    }\r\n  }\r\n\r\n  .inside-nav {\r\n    opacity: 1;\r\n    margin-right: 0;\r\n  }\r\n\r\n  .info--nav {\r\n    display: none;\r\n  }\r\n  /* navbar--group */\r\n  .navbar--group {\r\n    z-index: 10;\r\n    transition: var(--tran--opa);\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: var(--white-clr);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    width: 70vw;\r\n    transform: ${props =>\r\n      props.toggle ? 'translateX(0)' : 'translateX(105%)'};\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    position: ${props => (props.navScroll ? 'fixed' : 'absolute')};\r\n    margin-top: ${props => (props.navScroll ? '0' : '1em')};\r\n    margin: 0 auto;\r\n    padding: 0 1em;\r\n\r\n    .brand-logo {\r\n      width: 150px;\r\n    }\r\n\r\n    .nav--toggle {\r\n      display: none;\r\n    }\r\n\r\n    .info--link + .info--link {\r\n      margin-left: 2em;\r\n    }\r\n\r\n    /* Top head */\r\n    .head--top {\r\n      position: relative;\r\n      justify-content: end;\r\n      padding: 0;\r\n      max-width: 1600px;\r\n      margin: 0 auto 1em;\r\n\r\n      & > :last-child {\r\n        margin-left: auto;\r\n      }\r\n    }\r\n\r\n    .navbar {\r\n      padding: ${props => props.navScroll && '.5em'};\r\n      max-width: 1600px;\r\n      margin: 0 auto;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    /* Navbar */\r\n    .navbar--group {\r\n      z-index: 10;\r\n      transition: var(--tran--opa);\r\n      position: relative;\r\n      top: 0;\r\n      right: 0;\r\n      background-color: transparent;\r\n      height: auto;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      transform: translateX(0);\r\n      max-width: 70%;\r\n      margin-left: auto;\r\n    }\r\n\r\n    .nav--link {\r\n      &__item {\r\n        color: var(--white-clr);\r\n        &:hover,\r\n        &:focus {\r\n          color: var(--primary-clr);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const [navScroll, setNavScroll] = useState(false);\r\n  const [navheight, setNavHeight] = useState(null);\r\n  const navRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setNavHeight(navRef.current.scrollHeight);\r\n    window.addEventListener('scroll', () => {\r\n      console.log('he;;0');\r\n    });\r\n  }, [navheight]);\r\n\r\n  console.log(navScroll);\r\n  console.log(navheight);\r\n\r\n  return (\r\n    <Styled\r\n      ref={navRef}\r\n      toggle={toggle}\r\n      navScroll={navScroll}\r\n      className='header'\r\n    >\r\n      <div className='head--top'>\r\n        <a className='info--link' href='tel:'>\r\n          <FaPhone />\r\n          333-333-3333\r\n        </a>\r\n        <a className='info--link'>\r\n          <MdEmail />\r\n          Fiton@gmail.com\r\n        </a>\r\n        <a className='info--link'>\r\n          <MdMap />\r\n          203 Fake St, chicago, Ill\r\n        </a>\r\n        <span className='info--link'>Open 24/7</span>\r\n      </div>\r\n      <nav className='navbar'>\r\n        <Link href='/'>\r\n          <a className='brand-logo '>\r\n            <img src='/logo.svg' alt='logo' />\r\n          </a>\r\n        </Link>\r\n        <div className='nav--toggle'>\r\n          <span\r\n            className='burger toggle'\r\n            onClick={() => setToggle(!toggle)}\r\n          ></span>\r\n        </div>\r\n        <ul className='navbar--group'>\r\n          <div className='nav--toggle inside-nav'>\r\n            <span\r\n              className='burger toggle'\r\n              onClick={() => setToggle(!toggle)}\r\n            ></span>\r\n          </div>\r\n          <li className='nav--link'>\r\n            <Link href='/'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                HOME\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/about'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                ABOUT\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/classes'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                CLASSES\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/team'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                TEAM\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/pricing'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                PRICING\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/schedule'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                SCHEDULE\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className='nav--link'>\r\n            <Link href='/contact'>\r\n              <a className='nav--link__item' onClick={() => setToggle(!toggle)}>\r\n                CONTACT\r\n              </a>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n// if (window.scrollY > navheight) {\r\n//   setNavScroll(true);\r\n//   console.log(navScroll);\r\n// } else {\r\n//   setNavScroll(false);\r\n//   console.log(navScroll);\r\n// }\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAMA;AAAA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AA0BA;AAAA;AAoCA;AAAA;AACA;AAAA;AAUA;AAAA;AAOA;AAAA;AAUA;AAAA;AAoBA;AAAA;AAIA;AAAA;AA2BA;AAAA;AAKA;AAAA;AACA;AAAA;AA8BA;AAAA;AACA;AAmsourceRoot":""}